% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nsink_prep_data.R
\name{nsink_prep_data}
\alias{nsink_prep_data}
\title{Prepares N-Sink data for a given HUC}
\usage{
nsink_prep_data(
  huc,
  projection,
  data_dir = normalizePath("nsink_data/", winslash = "/")
)
}
\arguments{
\item{huc}{A character string of the HUC12 ID.  Use
\code{\link{nsink_get_huc_id}} to look up ID by name.}

\item{projection}{EPSG code as an integer or proj4 string as a character}

\item{data_dir}{Base directory that contains N-Sink data folders.  Data may
be downloaded with the \code{\link{nsink_get_data}} function.}
}
\value{
returns a list of sf, raster, or tabular objects for each of the
        required datasets plus the huc.
}
\description{
In addition to having local access to the required dataset, those datasets
need to have some preparation.  This function standardizes projections and
extents and clips all datasets to the boundary of the specified HUC.
Additionally, any tabular datasets (e.g. flow, time of travel etc.) are
included in the output as well.
}
\examples{
\dontrun{
library(nsink)
aea <- "ESRI:102003"
niantic_huc <- nsink_get_huc_id("Niantic River")$huc_12
niantic_nsink_data <- nsink_prep_data(huc = niantic_huc, projection = aea, data_dir = "../nsink_runs/niantic_nsink/")
# Example using EPSG code for projection
epsg <- 3748L
niantic_nsink_data <- nsink_prep_data(huc = niantic_huc, projection = epsg,
                data_dir = "nsink_data")
}
}
